services {
  postgresql {
    migration: true

    driver: "org.postgresql.Driver"

    host: "127.0.0.1"
    port: 5432

    db: "template"
    user: "template"
    password: "template"

    queueSize: 10000
    numThreads: 2
    maxConnections: 4
  }

  basic-auth {
    template: "template"
  }
}

endpoints: [
  {
    type: http
    host: "127.0.0.1"
    port: 8080
  },
  {
    type: grpc
    host: "127.0.0.1"
    port: 8081
  }
]

akka {
  loglevel = "debug"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider: "akka.cluster.ClusterActorRefProvider"
    serializers {
      key = "click.rashad.serialization.KeySerializer"
    }
    serialization-bindings {
      "scalapb.GeneratedMessage" = key
    }
  }

  cluster {
    min-nr-of-members = 1
    seed-nodes = []
  }

  remote {
    artery {
      enabled = on
      transport = tcp # tcp or aeron-udp

      canonical.hostname = "127.0.0.1"
      canonical.port = 2552

      bind.hostname = "127.0.0.1"
      bind.port = 2552
    }
  }

  management {
    http {
      hostname = "127.0.0.1"
      port = 8558
    }
  }

  extensions = [
    "click.rashad.commons.persist.PostgresDbExtension"
  ]
}


